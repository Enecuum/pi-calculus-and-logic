#!/usr/bin/local/enqpi --print-term

# petri nets

# выполняется попытка извлечь токен из плэйса если успешно то выставляется офер что есть токен для такойто арки
# аддитивная дизюнкция требует чтобы был хотябы один плэйс с токеном
# мультипликативная дизюнкция это решение конкуренции оферов на отправку токена
! placeA() . { <>archA ⅋ <>archD } ,
⊕ placeB() . { <>archB ⅋ <>archE } ,
⊕ placeC() . { <>archC ⅋ <>archE } ;


# сначала выставляется офер на арки задающий вопрос есть ли токены в плэйсах
# если все токены есть то дальше можно просто отправить новый токены в плэйсы так как они всегда готовы их принять
# оферы арок проверяются аддитивной конюнкцией так как форсировать все сразу не надо доататочно чтобы один провалился
# отправку в плейсы можно сразу форсировать и тут используется мультипликативная конюнкция
! { ()archA & ()archB & ()archC } ⊗ placeD<> ⊗ placeE<> ;

# inhibitor arc
# reset arc от того плэса от которого идят арка при стабатывании траззиции токены сбрасываются на ноль
# ихибитор запрещяет когда есть
# read arch, test arch
# timed arch арка работает когда есть требование time range


